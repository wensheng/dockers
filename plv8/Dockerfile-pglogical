FROM ubuntu/postgres:14-22.04_edge as plv8

ENV PLV8_VERSION=3.1.5

RUN buildDependencies="build-essential \
    postgresql-$PG_MAJOR \
    ca-certificates \
    curl \
    git-core \
    gnupg \
    gpp \
    cpp \
    pkg-config \
    apt-transport-https \
    cmake \
    libc++1 \
    libc++-dev \
    libncurses5 \
    libc++abi-dev \
	wget \
	zlib1g-dev \
	ninja-build \
    postgresql-server-dev-$PG_MAJOR" && \
    apt-get update && apt-get install -y --no-install-recommends ${buildDependencies}

RUN mkdir -p /tmp/build \
  && curl -o /tmp/build/v$PLV8_VERSION.tar.gz -SL "https://github.com/plv8/plv8/archive/refs/tags/v${PLV8_VERSION}.tar.gz" \
  && cd /tmp/build \
  && tar -xzf /tmp/build/v$PLV8_VERSION.tar.gz -C /tmp/build/ \
  && cd /tmp/build/plv8-$PLV8_VERSION \
  && make static \
  && make install \
  && strip /usr/lib/postgresql/${PG_MAJOR}/lib/plv8-${PLV8_VERSION}.so \
  && rm -fr /tmp/build

FROM ubuntu/postgres:14-22.04_edge
RUN mkdir -p /usr/lib/postgresql/${PG_MAJOR}/lib/
ENV PLV8_VERSION=3.1.5
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends gnupg2 libc++1
COPY --from=plv8 /usr/share/postgresql/${PG_MAJOR}/extension/ /usr/share/postgresql/${PG_MAJOR}/extension/
COPY --from=plv8 /usr/lib/postgresql/${PG_MAJOR}/lib/plv8-${PLV8_VERSION}.so /usr/lib/postgresql/${PG_MAJOR}/lib/plv8-${PLV8_VERSION}.so

RUN DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y postgresql-common && \
    sh /usr/share/postgresql-common/pgdg/apt.postgresql.org.sh -y && \
    apt-get install --no-install-recommends -y postgresql-${PG_MAJOR}-pglogical postgresql-plpython3-${PG_MAJOR} && \
    rm -rf /var/lib/apt/lists/*

RUN echo "wal_level = 'logical'" >> /usr/share/postgresql/postgresql.conf.sample && \
    echo "max_worker_processes = 10" >> /usr/share/postgresql/postgresql.conf.sample && \
    echo "max_replication_slots = 10" >> /usr/share/postgresql/postgresql.conf.sample && \
    echo "max_wal_senders = 10" >> /usr/share/postgresql/postgresql.conf.sample && \
    echo "shared_preload_libraries = 'pglogical'" >> /usr/share/postgresql/postgresql.conf.sample

RUN echo "host    replication          postgres                172.18.0.0/16   trust" >> /usr/share/postgresql/${PG_MAJOR}/pg_hba.conf.sample && \
    echo "host    replication          postgres                ::1/128         trust" >> /usr/share/postgresql/${PG_MAJOR}/pg_hba.conf.sample
